name: Python Package

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        id: checkout_repository
        uses: actions/checkout@v4

      - name: Install python
        id: install_python
        uses: actions/setup-python@v4
        with: { python-version: "3.11" }

      - name: Install poetry
        id: install_poetry
        run: pip3 install poetry

      - name: Install dependencies
        id: install_dependencies
        run: poetry install --with dev

      - name: Run pre-commit hook
        id: run_pre_commit_hook
        run: poetry run pre-commit run --all-files

      - name: Run pytest
        id: run_pytest
        run: poetry run pytest

  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: test
    steps:
      - name: Checkout repository
        id: checkout_repository
        uses: actions/checkout@v4

      - name: Install python
        id: install_python
        uses: actions/setup-python@v4
        with: { python-version: "3.11" }

      - name: Install poetry
        id: install_poetry
        run: pip3 install poetry

      - name: Update package version
        id: update_package_version
        run: poetry version ${{ github.ref_name }}

      - name: Build package
        id: build_package
        run: poetry build

      - name: Create release
        id: create_release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          draft: false
          prerelease: false
          automatic_release_tag: "latest"
          title: "Release ${{ github.ref_name }}"
          files: dist/*

      - name: Upload artifacts
        id: upload_artifacts
        uses: actions/upload-artifact@v3
        with:
          name: cxx-dist
          path: dist
